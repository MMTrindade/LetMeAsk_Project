[{"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/index.tsx":"1","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/App.tsx":"2","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/services/firebase.ts":"3","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Home.tsx":"4","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/Button.tsx":"5","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/NewRoom.tsx":"6","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/contexts/AuthContext.tsx":"7","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/hooks/useAuth.ts":"8","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Room.tsx":"9","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/RoomCode.tsx":"10"},{"size":316,"mtime":1677615882345,"results":"11","hashOfConfig":"12"},{"size":1102,"mtime":1678824771238,"results":"13","hashOfConfig":"12"},{"size":809,"mtime":1678749463191,"results":"14","hashOfConfig":"12"},{"size":3219,"mtime":1678884310116,"results":"15","hashOfConfig":"12"},{"size":487,"mtime":1678651589717,"results":"16","hashOfConfig":"12"},{"size":3228,"mtime":1678881884800,"results":"17","hashOfConfig":"12"},{"size":3669,"mtime":1678833717288,"results":"18","hashOfConfig":"12"},{"size":181,"mtime":1678750424365,"results":"19","hashOfConfig":"12"},{"size":5616,"mtime":1678887093310,"results":"20","hashOfConfig":"12"},{"size":519,"mtime":1678825036709,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"18on6o1",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/index.tsx",[],[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/App.tsx",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/services/firebase.ts",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Home.tsx",["55","56","57","58"],[],"//Hook para usar um contexto criado\nimport { FormEvent, useContext, useState } from 'react';\n//Hook para migrar entre páginas, vinculo a uma função e adiciono um \"on click \" com a função\nimport { useNavigate } from 'react-router-dom';\n//Importo firebase para implementar autenticação com google.\nimport { auth, database, firebase } from '../services/firebase'\n//Importing images through webpack\nimport illustrationImg from '../assets/images/illustration.svg'\nimport logoImg from '../assets/images/logo.svg';\nimport googleIconImg from '../assets/images/googleicon.svg';\n//Importing files\nimport '../styles/auth.scss';\n//Importing componentes(Remember: components always start with capital letter)\nimport { Button } from '../components/Button';\n//Importing Context functionalities created in App\nimport {useAuth} from '../hooks/useAuth'\n\n\nexport function Home () {\n    const navigate = useNavigate();\n    const { user, signInWithGoogle } = useAuth()\n    const [ roomCode, setRoomCode ] = useState('');\n\n    //Autenticação do usuário com Firebase/Verifica se o usuario nao existe=se nao esta logado, dai direciona para a autenticacao\n    async function handleCreateRoom () {\n        if (!user) {\n            await signInWithGoogle()\n        }\n        navigate('/rooms/new');\n    }\n\n    //Para todo formulario no React preciso dar um preventDefault\n    //Confirguracao para acessar sala\n    async function handleJoinRoom (event: FormEvent) {\n        event.preventDefault();\n\n        if (roomCode.trim() === '') {\n            return;\n        }\n    \n    \n        //Verificando se a sala que o usuario quer existe. Get acessa todos os dados da room.\n        const roomRef = await database.ref(`rooms/${roomCode}`).get();\n\n        //Se o que estiver dentro dos parenteses for true, ele envia o alerta. A propriedade exists vai indicar false no caso de roomRef nao existir, e a ! tambem gera false automaticamente, logo o resultado e true.\n        if (!roomRef.exists()) {\n            alert ('Room does not exist.');\n            return;\n        }\n        \n        navigate(`/rooms/${roomCode}`);\n    }\n\n    \n\n    return (\n        <div id=\"page-auth\">\n            <aside>\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\" />\n                <strong> Crie salas de Q&amp;A ao-vivo</strong> \n                <p> Tire as dúvidas da sua audiência em tempo real</p>\n            </aside>\n            <main>\n                <div className=\"main-content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n\n                    <button onClick={handleCreateRoom} className='create-room'>\n                        <img src = {googleIconImg} alt=\"Logo do Google\" />\n                        Crie sua sala com o Google\n                    </button>\n\n                    <div className=\"separator\" >ou entre em uma sala</div>\n\n                    <form>\n\n                        <input type = \"text\" placeholder= \"Digite o código da sala\" onChange={event => setRoomCode(event.target.value)} value = {roomCode}/>\n\n                        <Button type=\"submit\">Entrar na Sala</Button>\n\n                    </form>\n                </div>\n            </main>\n        </div>\n    )\n}",[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/Button.tsx",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/NewRoom.tsx",["59","60"],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/contexts/AuthContext.tsx",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/hooks/useAuth.ts",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Room.tsx",["61"],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/RoomCode.tsx",[],[],{"ruleId":"62","severity":1,"message":"63","line":2,"column":21,"nodeType":"64","messageId":"65","endLine":2,"endColumn":31},{"ruleId":"62","severity":1,"message":"66","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":14},{"ruleId":"62","severity":1,"message":"67","line":6,"column":26,"nodeType":"64","messageId":"65","endLine":6,"endColumn":34},{"ruleId":"62","severity":1,"message":"68","line":34,"column":20,"nodeType":"64","messageId":"65","endLine":34,"endColumn":34},{"ruleId":"62","severity":1,"message":"69","line":12,"column":8,"nodeType":"64","messageId":"65","endLine":12,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":33,"column":28,"nodeType":"72","messageId":"73","endLine":33,"endColumn":30},{"ruleId":"62","severity":1,"message":"74","line":4,"column":9,"nodeType":"64","messageId":"65","endLine":4,"endColumn":17},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","'firebase' is defined but never used.","'handleJoinRoom' is defined but never used.","'googleIconImg' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RoomCode' is defined but never used."]