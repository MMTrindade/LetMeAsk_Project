[{"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/index.tsx":"1","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/App.tsx":"2","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/services/firebase.ts":"3","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Home.tsx":"4","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/Button.tsx":"5","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/NewRoom.tsx":"6","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/contexts/AuthContext.tsx":"7","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/hooks/useAuth.ts":"8","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Room.tsx":"9","/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/RoomCode.tsx":"10"},{"size":316,"mtime":1677615882345,"results":"11","hashOfConfig":"12"},{"size":1102,"mtime":1678824771238,"results":"13","hashOfConfig":"12"},{"size":809,"mtime":1678749463191,"results":"14","hashOfConfig":"12"},{"size":3174,"mtime":1678811117987,"results":"15","hashOfConfig":"12"},{"size":487,"mtime":1678651589717,"results":"16","hashOfConfig":"12"},{"size":3152,"mtime":1678813622435,"results":"17","hashOfConfig":"12"},{"size":3669,"mtime":1678833717288,"results":"18","hashOfConfig":"12"},{"size":181,"mtime":1678750424365,"results":"19","hashOfConfig":"12"},{"size":4960,"mtime":1678838761032,"results":"20","hashOfConfig":"12"},{"size":519,"mtime":1678825036709,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"18on6o1",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/index.tsx",[],[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/App.tsx",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/services/firebase.ts",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Home.tsx",["55","56","57","58"],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/Button.tsx",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/NewRoom.tsx",["59","60"],[],"\nimport { useState } from 'react';\n\nimport {FormEvent} from 'react';\n//Hook para migrar entre páginas, No caso newRoom e uma ancora, entao uso link to, ao inves de navigate.\n\nimport { Link, useNavigate } from 'react-router-dom';\n\n//Importing images through webpack\nimport illustrationImg from '../assets/images/illustration.svg'\nimport logoImg from '../assets/images/logo.svg';\nimport googleIconImg from '../assets/images/googleicon.svg';\n//Importing files\nimport '../styles/auth.scss';\n//Importing componentes(Remember: components always start with capital letter)\nimport { Button } from '../components/Button';\nimport { database } from '../services/firebase';\n//Hook para usar um contexto criado (UseContext & AuthContext)\nimport { useAuth } from '../hooks/useAuth';\n\nexport function NewRoom () {\n    const { user } = useAuth();\n    const navigate = useNavigate();\n    \n    //const { user } = useContext(AuthContext);\n    const [newRoom, setNewRoom] = useState(\" \");\n//newRoom foi passado no input, caso a variavel mude isso vai refletir la tbm\n\n    async function handleCreateRoom(event:FormEvent) {\n        event.preventDefault();\n//trim remove os espacos em ambos os lados\n//return caso o valor seja vazio, nao quero deixar criar uma sala sem nome\n        if (newRoom.trim() == '') {\n            return;\n        }\n        //Estou me referindo a um dado da database aqui, e la dentro vou ter uma categoria que se chama rooms\n        const roomRef = database.ref('rooms');\n//procurei uma ref rooms, e dentro dela faco um push>Jogo uma info para dentro de rooms (uma nova sala)\n        const firebaseRoom = await roomRef.push({\n            title: newRoom,\n            authorId: user?.id,\n        })\n//key aqui se trata do id da sala, pra garantir que cda usuario caia na sua sala criada\n        navigate(`/rooms/${firebaseRoom.key}`)\n\n    }\n\n    return (\n        <div id=\"page-auth\">\n            <aside>\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\" />\n                <strong> Crie salas de Q&amp;A ao-vivo</strong> \n                <p> Tire as dúvidas da sua audiência em tempo real</p>\n            </aside>\n            <main> \n                <div className=\"main-content\"> \n                    <img src={logoImg} alt=\"Letmeask\" />\n\n                    <h2>Criar uma Nova Sala</h2>\n\n                    <div className=\"separator\" >ou entre em uma sala</div>\n\n                    <form onSubmit={handleCreateRoom}>\n\n                        <input type = \"text\" placeholder= \"Nome da Sala\" onChange={event => setNewRoom(event.target.value)} value={newRoom}/>\n\n                        <Button type=\"submit\">Criar Sala</Button>\n\n                    </form>\n                    <p>\n                        Quer entrar em uma sala existente? <Link to=\"/\">Clique aqui</Link>\n                    </p>\n                </div>\n            </main>\n        </div>\n    )\n}//event atualiza o valor do input toda vez que o usuario digita algo nele\n\n// ? is called an optional chaining, used after an oject for the case the property name doesn't exist, it'll return undefined, instead of throwing a  big error.",[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/contexts/AuthContext.tsx",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/hooks/useAuth.ts",[],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Room.tsx",["61"],[],"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/components/RoomCode.tsx",[],[],{"ruleId":"62","severity":1,"message":"63","line":2,"column":21,"nodeType":"64","messageId":"65","endLine":2,"endColumn":31},{"ruleId":"62","severity":1,"message":"66","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":14},{"ruleId":"62","severity":1,"message":"67","line":6,"column":26,"nodeType":"64","messageId":"65","endLine":6,"endColumn":34},{"ruleId":"62","severity":1,"message":"68","line":34,"column":20,"nodeType":"64","messageId":"65","endLine":34,"endColumn":34},{"ruleId":"62","severity":1,"message":"69","line":12,"column":8,"nodeType":"64","messageId":"65","endLine":12,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":33,"column":28,"nodeType":"72","messageId":"73","endLine":33,"endColumn":30},{"ruleId":"62","severity":1,"message":"74","line":4,"column":9,"nodeType":"64","messageId":"65","endLine":4,"endColumn":17},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","'firebase' is defined but never used.","'handleJoinRoom' is defined but never used.","'googleIconImg' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RoomCode' is defined but never used."]