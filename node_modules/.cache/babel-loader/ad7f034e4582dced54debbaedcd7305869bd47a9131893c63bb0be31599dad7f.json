{"ast":null,"code":"var _jsxFileName = \"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Room.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { Button } from \"../components/Button\";\nimport logoImg from \"../assets/images/logo.svg\";\nimport { useState } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { database } from \"../services/firebase\";\nimport '../styles/room.scss';\nimport { Question } from \"../components/Questions/Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//Os parametros da minha pagina ficarao armazenados em params, quero manter o codigo da pagina.\nexport function Room() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const params = useParams(); //Generics: Para que a funcao saiba quais os parametros que a rota params vai receber\n  const roomId = params.id;\n  const [newQuestion, setNewQuestion] = useState('');\n  const {} = useRoom();\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n    //preventDeafault garante que o site nao ira recarregar a tela desnecessariamente\n    if (newQuestion.trim() === '') {\n      return;\n    }\n    if (!user) {\n      throw new Error('You must be logged in');\n    }\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighLighted: false,\n      isAnswered: false\n    };\n\n    //Na database tenho authorID e title contendo informacoes da sala. Com /questions, crio mais um elemento, e faco push da const question criada acima\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion(''); //Apos o envio da pergunta, modifico o estado do newQuestion na area de texto para vazio pois a pergunta ja foi enviada.\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 46\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA quer perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [user ?\n          /*#__PURE__*/\n          /* if ->? condicao else -> : consequencia*/\n          _jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar,\n              alt: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 61\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Enviar pergunta \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n//Improvement opportunity: Value updates the whole list whenever one single information is changed. If the page has 1000 questions, for example, it can make the platform slow. Check on /child added/child changed/ on firebase.\n_s(Room, \"qMOKTWAEpsaayCKijFHOgwmxyvQ=\", true, function () {\n  return [useAuth, useParams];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["useParams","Button","logoImg","useState","useAuth","database","Question","Room","user","params","roomId","id","newQuestion","setNewQuestion","useRoom","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighLighted","isAnswered","ref","push","title","questions","length","target","value","map"],"sources":["/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Room.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { Button } from \"../components/Button\";\nimport  logoImg  from \"../assets/images/logo.svg\";\nimport {RoomCode} from '../components/RoomCode'\nimport { FormEvent, useEffect, useState } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { database } from \"../services/firebase\";\n\nimport '../styles/room.scss'\nimport { Question } from \"../components/Questions/Question\";\n\n\ntype RoomParams = {\n    id: string;\n}\n\n\n//Os parametros da minha pagina ficarao armazenados em params, quero manter o codigo da pagina.\nexport function Room(){ \n    const {user} = useAuth();\n    const params = useParams<RoomParams>(); //Generics: Para que a funcao saiba quais os parametros que a rota params vai receber\n    const roomId = params.id;\n    const [newQuestion, setNewQuestion] = useState('');\n    const {} = useRoom()\n    \n\n\n    async function handleSendQuestion(event: FormEvent) {\n        event.preventDefault();\n//preventDeafault garante que o site nao ira recarregar a tela desnecessariamente\n        if (newQuestion.trim() === '') {\n            return;\n        }\n    \n        if (!user) {\n            throw new Error('You must be logged in');\n        }\n\n        const question = {\n            content: newQuestion,\n            author: {\n                name: user.name,\n                avatar: user.avatar,\n            },\n            isHighLighted:false,\n            isAnswered: false,\n        };\n\n//Na database tenho authorID e title contendo informacoes da sala. Com /questions, crio mais um elemento, e faco push da const question criada acima\n        await database.ref(`rooms/${roomId}/questions`).push(question);\n    \n        setNewQuestion('');//Apos o envio da pergunta, modifico o estado do newQuestion na area de texto para vazio pois a pergunta ja foi enviada.\n    }\n\n    return(\n        <div id='page-room'>\n            <header>\n                <div className='content'>\n                    <img src={logoImg} alt='Letmeask'/>\n                    {/*<RoomCode code={params.id}/> disponibiliza o codigo no header da sala, mas esta dando erro*/} \n                </div>\n            </header>\n\n            \n            <main className='content'>\n                <div className='room-title'>\n                    <h1>{title}</h1> \n                    {questions.length > 0 && <span>{questions.length} pergunta(s)</span>} {/*if condicao && signigfica then consequencia*/}\n                </div>\n\n                    {/*Pega o valor do input conforme ele e digitado*/}\n                <form onSubmit={handleSendQuestion}>\n                    <textarea \n                    placeholder='O que você quer perguntar?'\n                    onChange={event => setNewQuestion(event.target.value)}\n                    value={newQuestion}\n                    />\n\n                    <div className='form-footer'>\n                        { user ? ( /* if ->? condicao else -> : consequencia*/\n                            <div className=\"user-info\">\n                                <img src={user.avatar} alt={user.name} />\n                                <span>{user.name}</span>\n                            </div>\n                        ) : (\n                            <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\n                        )}\n                        \n                        <Button type='submit' disabled={!user}>Enviar pergunta </Button>\n                    </div>\n                </form>\n\n                {/*Unica forma de percorrer um array e retornar cada item desse array como um componente-metodo map, funciona como um for each, que itera sobre o array, mas map permite retornar items do array tambem. O que e retornado e o conteudo de cada question*/}\n                {/* Toda vez que se usa o map, precisa-se passar ao primeiro elemento do componente uma key, e atribuir uma info unica dentro dela, como question.id, para que o react consiga identificar a diferenca de um item pro outro>Algoritmo de reconciliacao. Em caso contrario, o react monta tudo de novo*/ }\n                <div className=\"question-list\">\n                    {questions.map(question => {\n                        return (\n                            <Question\n                                key={question.id}\n                                content={question.content}  \n                                author={question.author}\n                            />\n                        )\n                    })}\n                </div>\n                \n            </main>\n        </div>\n\n    );\n}\n\n//Improvement opportunity: Value updates the whole list whenever one single information is changed. If the page has 1000 questions, for example, it can make the platform slow. Check on /child added/child changed/ on firebase."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}