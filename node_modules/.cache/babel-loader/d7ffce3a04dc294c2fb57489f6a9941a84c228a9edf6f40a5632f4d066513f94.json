{"ast":null,"code":"var _jsxFileName = \"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\n//Hook para usar um contexto criado\nimport { useState } from 'react';\n//Hook para migrar entre páginas, vinculo a uma função e adiciono um \"on click \" com a função\nimport { useNavigate } from 'react-router-dom';\n//Importo firebase para implementar autenticação com google.\nimport { database } from '../services/firebase';\n//Importing images through webpack\nimport illustrationImg from '../assets/images/illustration.svg';\nimport logoImg from '../assets/images/logo.svg';\nimport googleIconImg from '../assets/images/googleicon.svg';\n//Importing files\nimport '../styles/auth.scss';\n//Importing componentes(Remember: components always start with capital letter)\nimport { Button } from '../components/Button';\n//Importing Context functionalities created in App\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function Home() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user,\n    signInWithGoogle\n  } = useAuth();\n  const [roomCode, setRoomCode] = useState('');\n\n  //Autenticação do usuário com Firebase/Verifica se o usuario nao existe=se nao esta logado, dai direciona para a autenticacao\n  async function handleCreateRoom() {\n    if (!user) {\n      await signInWithGoogle();\n    }\n    navigate('/rooms/new');\n  }\n  //Para todo formulario no React preciso dar um preventDefault\n  //Confirguracao para acessar sala\n  async function handleJoinRoom(event) {\n    event.preventDefault();\n    if (roomCode.trim() === '') {\n      return;\n    }\n  }\n  //Verificando se a sala que o usuario quer existe. Get acessa todos os dados da room.\n  const roomRef = await database.ref(`rooms/${roomCode}`).get();\n\n  //Se o que estiver dentro dos parenteses for true, ele envia o alerta. A propriedade exists vai indicar false no caso de roomRef nao existir, e a ! tambem gera false automaticamente, logo o resultado e true.\n  if (!roomRef.exists()) {\n    alert('Room does not exists.');\n    return;\n  }\n  navigate(`/rooms/${roomCode}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: illustrationImg,\n        alt: \"Ilustra\\xE7\\xE3o simbolizando perguntas e respostas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Crie salas de Q&A ao-vivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Tire as d\\xFAvidas da sua audi\\xEAncia em tempo real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateRoom,\n          className: \"create-room\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: googleIconImg,\n            alt: \"Logo do Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), \"Crie sua sala com o Google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\",\n          children: \"ou entre em uma sala\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Digite o c\\xF3digo da sala\",\n            onChange: event => setRoomCode(event.target.value),\n            value: roomCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Entrar na Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"SAI9KyozB3xhRM7ETMbcmqNN9jE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useNavigate","database","illustrationImg","logoImg","googleIconImg","Button","useAuth","Home","navigate","user","signInWithGoogle","roomCode","setRoomCode","handleCreateRoom","handleJoinRoom","event","preventDefault","trim","roomRef","ref","get","exists","alert","target","value"],"sources":["/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/Home.tsx"],"sourcesContent":["//Hook para usar um contexto criado\nimport { FormEvent, useContext, useState } from 'react';\n//Hook para migrar entre páginas, vinculo a uma função e adiciono um \"on click \" com a função\nimport { useNavigate } from 'react-router-dom';\n//Importo firebase para implementar autenticação com google.\nimport { auth, database, firebase } from '../services/firebase'\n//Importing images through webpack\nimport illustrationImg from '../assets/images/illustration.svg'\nimport logoImg from '../assets/images/logo.svg';\nimport googleIconImg from '../assets/images/googleicon.svg';\n//Importing files\nimport '../styles/auth.scss';\n//Importing componentes(Remember: components always start with capital letter)\nimport { Button } from '../components/Button';\n//Importing Context functionalities created in App\nimport {useAuth} from '../hooks/useAuth'\n\n\nexport async function Home () {\n    const navigate = useNavigate();\n    const { user, signInWithGoogle } = useAuth()\n    const [ roomCode, setRoomCode ] = useState('');\n\n    //Autenticação do usuário com Firebase/Verifica se o usuario nao existe=se nao esta logado, dai direciona para a autenticacao\n    async function handleCreateRoom () {\n        if (!user) {\n            await signInWithGoogle()\n        }\n        navigate('/rooms/new');\n        }\n    //Para todo formulario no React preciso dar um preventDefault\n    //Confirguracao para acessar sala\n    async function handleJoinRoom (event: FormEvent) {\n        event.preventDefault();\n\n        if (roomCode.trim() === '') {\n            return;\n        }\n    }\n    //Verificando se a sala que o usuario quer existe. Get acessa todos os dados da room.\n    const roomRef = await database.ref(`rooms/${roomCode}`).get();\n\n    //Se o que estiver dentro dos parenteses for true, ele envia o alerta. A propriedade exists vai indicar false no caso de roomRef nao existir, e a ! tambem gera false automaticamente, logo o resultado e true.\n    if (!roomRef.exists()) {\n        alert ('Room does not exists.')\n        return;\n    }\n\n    navigate(`/rooms/${roomCode}`)\n\n    return (\n        <div id=\"page-auth\">\n            <aside>\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\" />\n                <strong> Crie salas de Q&amp;A ao-vivo</strong> \n                <p> Tire as dúvidas da sua audiência em tempo real</p>\n            </aside>\n            <main>\n                <div className=\"main-content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n\n                    <button onClick={handleCreateRoom} className='create-room'>\n                        <img src = {googleIconImg} alt=\"Logo do Google\" />\n                        Crie sua sala com o Google\n                    </button>\n\n                    <div className=\"separator\" >ou entre em uma sala</div>\n\n                    <form>\n\n                        <input type = \"text\" placeholder= \"Digite o código da sala\" onChange={event => setRoomCode(event.target.value)} value = {roomCode}/>\n\n                        <Button type=\"submit\">Entrar na Sala</Button>\n\n                    </form>\n                </div>\n            </main>\n        </div>\n    )\n}"],"mappings":";;AAAA;AACA,SAAgCA,QAAQ,QAAQ,OAAO;AACvD;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAAeC,QAAQ,QAAkB,sBAAsB;AAC/D;AACA,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,aAAa,MAAM,iCAAiC;AAC3D;AACA,OAAO,qBAAqB;AAC5B;AACA,SAASC,MAAM,QAAQ,sBAAsB;AAC7C;AACA,SAAQC,OAAO,QAAO,kBAAkB;AAAA;AAGxC,OAAO,eAAeC,IAAI,GAAI;EAAA;EAC1B,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES,IAAI;IAAEC;EAAiB,CAAC,GAAGJ,OAAO,EAAE;EAC5C,MAAM,CAAEK,QAAQ,EAAEC,WAAW,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,eAAec,gBAAgB,GAAI;IAC/B,IAAI,CAACJ,IAAI,EAAE;MACP,MAAMC,gBAAgB,EAAE;IAC5B;IACAF,QAAQ,CAAC,YAAY,CAAC;EACtB;EACJ;EACA;EACA,eAAeM,cAAc,CAAEC,KAAgB,EAAE;IAC7CA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAIL,QAAQ,CAACM,IAAI,EAAE,KAAK,EAAE,EAAE;MACxB;IACJ;EACJ;EACA;EACA,MAAMC,OAAO,GAAG,MAAMjB,QAAQ,CAACkB,GAAG,CAAE,SAAQR,QAAS,EAAC,CAAC,CAACS,GAAG,EAAE;;EAE7D;EACA,IAAI,CAACF,OAAO,CAACG,MAAM,EAAE,EAAE;IACnBC,KAAK,CAAE,uBAAuB,CAAC;IAC/B;EACJ;EAEAd,QAAQ,CAAE,UAASG,QAAS,EAAC,CAAC;EAE9B,oBACI;IAAK,EAAE,EAAC,WAAW;IAAA,wBACf;MAAA,wBACI;QAAK,GAAG,EAAET,eAAgB;QAAC,GAAG,EAAC;MAA+C;QAAA;QAAA;QAAA;MAAA,QAAG,eACjF;QAAA,UAAQ;MAA8B;QAAA;QAAA;QAAA;MAAA,QAAS,eAC/C;QAAA,UAAG;MAA+C;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD,eACR;MAAA,uBACI;QAAK,SAAS,EAAC,cAAc;QAAA,wBACzB;UAAK,GAAG,EAAEC,OAAQ;UAAC,GAAG,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAEpC;UAAQ,OAAO,EAAEU,gBAAiB;UAAC,SAAS,EAAC,aAAa;UAAA,wBACtD;YAAK,GAAG,EAAIT,aAAc;YAAC,GAAG,EAAC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAG,8BAEtD;QAAA;UAAA;UAAA;UAAA;QAAA,QAAS,eAET;UAAK,SAAS,EAAC,WAAW;UAAA,UAAE;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAM,eAEtD;UAAA,wBAEI;YAAO,IAAI,EAAG,MAAM;YAAC,WAAW,EAAE,4BAAyB;YAAC,QAAQ,EAAEW,KAAK,IAAIH,WAAW,CAACG,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAE;YAAC,KAAK,EAAIb;UAAS;YAAA;YAAA;YAAA;UAAA,QAAE,eAEpI,QAAC,MAAM;YAAC,IAAI,EAAC,QAAQ;YAAA,UAAC;UAAc;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAE1C;MAAA;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GA7DqBJ,IAAI;EAAA,QACLP,WAAW,EACOM,OAAO;AAAA;AAAA,KAFxBC,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}