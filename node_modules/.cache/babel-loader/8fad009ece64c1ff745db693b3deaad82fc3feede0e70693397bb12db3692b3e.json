{"ast":null,"code":"var _jsxFileName = \"/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/NewRoom.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n//Hook para migrar entre páginas, No caso newRoom e uma ancora, entao uso link to, ao inves de navigate.\n\nimport { Link, useNavigate } from 'react-router-dom';\n\n//Importing images through webpack\nimport illustrationImg from '../assets/images/illustration.svg';\nimport logoImg from '../assets/images/logo.svg';\n//Importing files\nimport '../styles/auth.scss';\n//Importing componentes(Remember: components always start with capital letter)\nimport { Button } from '../components/Button';\nimport { database } from '../services/firebase';\n//Hook para usar um contexto criado (UseContext & AuthContext)\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewRoom() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n\n  //const { user } = useContext(AuthContext);\n  const [newRoom, setNewRoom] = useState(\" \");\n  //newRoom foi passado no input, caso a variavel mude isso vai refletir la tbm\n\n  async function handleCreateRoom(event) {\n    event.preventDefault();\n    //trim remove os espacos em ambos os lados\n    //return caso o valor seja vazio, nao quero deixar criar uma sala sem nome\n    if (newRoom.trim() == '') {\n      return;\n    }\n    //Estou me referindo a um dado da database aqui, e la dentro vou ter uma categoria que se chama rooms\n    const roomRef = database.ref('rooms');\n    //procurei uma ref rooms, e dentro dela faco um push>Jogo uma info(nova sala) para dentro de rooms(lista no firebase) (uma nova sala). Se fosse info unica, sem ser lista, uso set.\n    const firebaseRoom = await roomRef.push({\n      title: newRoom,\n      authorId: user === null || user === void 0 ? void 0 : user.id\n    });\n    //key aqui se trata do id da sala, pra garantir que cda usuario caia na sua sala criada\n    navigate(`/rooms/${firebaseRoom.key}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: illustrationImg,\n        alt: \"Ilustra\\xE7\\xE3o simbolizando perguntas e respostas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Crie salas de Q&A ao-vivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Tire as d\\xFAvidas da sua audi\\xEAncia em tempo real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Criar uma Nova Sala\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\",\n          children: \"ou entre em uma sala\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateRoom,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Nome da Sala\",\n            onChange: event => setNewRoom(event.target.value),\n            value: newRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Criar Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quer entrar em uma sala existente? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Clique aqui\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n} //event atualiza o valor do input toda vez que o usuario digita algo nele\n\n// ? is called an optional chaining, used after an oject for the case the property name doesn't exist, it'll return undefined, instead of throwing a  big error.\n_s(NewRoom, \"3qJI7kZDKsXlq4rllBCt3eqz3Pw=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = NewRoom;\nvar _c;\n$RefreshReg$(_c, \"NewRoom\");","map":{"version":3,"names":["useState","Link","useNavigate","illustrationImg","logoImg","Button","database","useAuth","NewRoom","user","navigate","newRoom","setNewRoom","handleCreateRoom","event","preventDefault","trim","roomRef","ref","firebaseRoom","push","title","authorId","id","key","target","value"],"sources":["/Users/mtrindade/Documents/Dev_Docs/Projetos/LetMeAsk_Project/src/pages/NewRoom.tsx"],"sourcesContent":["\nimport { useState } from 'react';\n\nimport {FormEvent} from 'react';\n//Hook para migrar entre páginas, No caso newRoom e uma ancora, entao uso link to, ao inves de navigate.\n\nimport { Link, useNavigate } from 'react-router-dom';\n\n//Importing images through webpack\nimport illustrationImg from '../assets/images/illustration.svg'\nimport logoImg from '../assets/images/logo.svg';\nimport googleIconImg from '../assets/images/googleicon.svg';\n//Importing files\nimport '../styles/auth.scss';\n//Importing componentes(Remember: components always start with capital letter)\nimport { Button } from '../components/Button';\nimport { database } from '../services/firebase';\n//Hook para usar um contexto criado (UseContext & AuthContext)\nimport { useAuth } from '../hooks/useAuth';\n\nexport function NewRoom () {\n    const { user } = useAuth();\n    const navigate = useNavigate();\n    \n    //const { user } = useContext(AuthContext);\n    const [newRoom, setNewRoom] = useState(\" \");\n//newRoom foi passado no input, caso a variavel mude isso vai refletir la tbm\n\n    async function handleCreateRoom(event:FormEvent) {\n        event.preventDefault();\n//trim remove os espacos em ambos os lados\n//return caso o valor seja vazio, nao quero deixar criar uma sala sem nome\n        if (newRoom.trim() == '') {\n            return;\n        }\n        //Estou me referindo a um dado da database aqui, e la dentro vou ter uma categoria que se chama rooms\n        const roomRef = database.ref('rooms');\n//procurei uma ref rooms, e dentro dela faco um push>Jogo uma info(nova sala) para dentro de rooms(lista no firebase) (uma nova sala). Se fosse info unica, sem ser lista, uso set.\n        const firebaseRoom = await roomRef.push({\n            title: newRoom,\n            authorId: user?.id,\n        })\n//key aqui se trata do id da sala, pra garantir que cda usuario caia na sua sala criada\n        navigate(`/rooms/${firebaseRoom.key}`)\n\n    }\n\n    return (\n        <div id=\"page-auth\">\n            <aside>\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\" />\n                <strong> Crie salas de Q&amp;A ao-vivo</strong> \n                <p> Tire as dúvidas da sua audiência em tempo real</p>\n            </aside>\n            <main> \n                <div className=\"main-content\"> \n                    <img src={logoImg} alt=\"Letmeask\" />\n\n                    <h2>Criar uma Nova Sala</h2>\n\n                    <div className=\"separator\" >ou entre em uma sala</div>\n\n                    <form onSubmit={handleCreateRoom}>\n\n                        <input type = \"text\" placeholder= \"Nome da Sala\" onChange={event => setNewRoom(event.target.value)} value={newRoom}/>\n\n                        <Button type=\"submit\">Criar Sala</Button>\n\n                    </form>\n                    <p>\n                        Quer entrar em uma sala existente? <Link to=\"/\">Clique aqui</Link>\n                    </p>\n                </div>\n            </main>\n        </div>\n    )\n}//event atualiza o valor do input toda vez que o usuario digita algo nele\n\n// ? is called an optional chaining, used after an oject for the case the property name doesn't exist, it'll return undefined, instead of throwing a  big error."],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAGhC;;AAEA,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;;AAEpD;AACA,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C;AACA,OAAO,qBAAqB;AAC5B;AACA,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C;AACA,SAASC,OAAO,QAAQ,kBAAkB;AAAC;AAE3C,OAAO,SAASC,OAAO,GAAI;EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGF,OAAO,EAAE;EAC1B,MAAMG,QAAQ,GAAGR,WAAW,EAAE;;EAE9B;EACA,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EAC/C;;EAEI,eAAea,gBAAgB,CAACC,KAAe,EAAE;IAC7CA,KAAK,CAACC,cAAc,EAAE;IAC9B;IACA;IACQ,IAAIJ,OAAO,CAACK,IAAI,EAAE,IAAI,EAAE,EAAE;MACtB;IACJ;IACA;IACA,MAAMC,OAAO,GAAGX,QAAQ,CAACY,GAAG,CAAC,OAAO,CAAC;IAC7C;IACQ,MAAMC,YAAY,GAAG,MAAMF,OAAO,CAACG,IAAI,CAAC;MACpCC,KAAK,EAAEV,OAAO;MACdW,QAAQ,EAAEb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc;IACpB,CAAC,CAAC;IACV;IACQb,QAAQ,CAAE,UAASS,YAAY,CAACK,GAAI,EAAC,CAAC;EAE1C;EAEA,oBACI;IAAK,EAAE,EAAC,WAAW;IAAA,wBACf;MAAA,wBACI;QAAK,GAAG,EAAErB,eAAgB;QAAC,GAAG,EAAC;MAA+C;QAAA;QAAA;QAAA;MAAA,QAAG,eACjF;QAAA,UAAQ;MAA8B;QAAA;QAAA;QAAA;MAAA,QAAS,eAC/C;QAAA,UAAG;MAA+C;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD,eACR;MAAA,uBACI;QAAK,SAAS,EAAC,cAAc;QAAA,wBACzB;UAAK,GAAG,EAAEC,OAAQ;UAAC,GAAG,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAEpC;UAAA,UAAI;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAK,eAE5B;UAAK,SAAS,EAAC,WAAW;UAAA,UAAE;QAAoB;UAAA;UAAA;UAAA;QAAA,QAAM,eAEtD;UAAM,QAAQ,EAAES,gBAAiB;UAAA,wBAE7B;YAAO,IAAI,EAAG,MAAM;YAAC,WAAW,EAAE,cAAc;YAAC,QAAQ,EAAEC,KAAK,IAAIF,UAAU,CAACE,KAAK,CAACW,MAAM,CAACC,KAAK,CAAE;YAAC,KAAK,EAAEf;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAE,eAErH,QAAC,MAAM;YAAC,IAAI,EAAC,QAAQ;YAAA,UAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAEtC,eACP;UAAA,WAAG,qCACoC,uBAAC,IAAI;YAAC,EAAE,EAAC,GAAG;YAAA,UAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAClE;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;;AAED;AAAA,GA1DgBH,OAAO;EAAA,QACFD,OAAO,EACPL,WAAW;AAAA;AAAA,KAFhBM,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}